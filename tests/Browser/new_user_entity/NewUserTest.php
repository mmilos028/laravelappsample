<?php

namespace Tests\Browser;

use Tests\DuskTestCase;
use Laravel\Dusk\Browser;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use App\Helpers\StringHelper;

class NewUserTest extends DuskTestCase
{
    private $home_page = '/backoffice-tombola/public/en/home_page';
    private $backoffice_username = '';
    private $backoffice_password = '';

    public function setUp()
    {
        $this->backoffice_username = getenv("ADMINISTRATOR_OPERATER_BACKOFFICE_USERNAME");
        $this->backoffice_password = getenv("ADMINISTRATOR_OPERATER_BACKOFFICE_PASSWORD");
        $this->home_page = getenv('TEST_HOME_PAGE_URL_FOR_BROWSER_TESTING');
        return parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @throws \Throwable
     */
    public function testBasicExample()
    {
        $this->browse(function (Browser $browser) {
            $browser->visit('')
                    ->assertSee('Partner Network');
        });
    }

    /**
     * @throws \Throwable
     */
    public function testLoginBackoffice()
    {
        $username = $this->backoffice_username;
        $password = $this->backoffice_password;
        $this->browse(function (Browser $browser) use($username, $password){
            $browser->visit('')
                    ->type('username', $username)
                    ->type('password', $password)
                    ->press('login')
                    ->assertPathIs($this->home_page);
            ;
            $browser->click("#toggleSideBar");
        });
    }

    /**
     * @throws \Throwable
     */
    public function testVisitUserNewUserPage()
    {
        $this->browse(function (Browser $browser) {
            $browser->visit("newUser2")
            ;
        });
    }

    /**
     * @throws \Throwable
     */
    public function testCreateNewAdministratorOperater()
    {
        $user_random_name = StringHelper::player_random_name('testAdminOpr_');

        $this->browse(function (Browser $browser) use ($user_random_name){
            $browser->visit("newUser2")
                ->select('subject_type', config('constants.ADMINISTRATOR_OPERATER_ID'))
                ->pause(2000)
                ->select('parent_affiliate')
                ->pause(2000)
                ->type('username', $user_random_name)
                ->type('password', $user_random_name)
                ->type('confirm_password', $user_random_name)
                ->type('first_name', $user_random_name)
                ->type('last_name', $user_random_name)
                ->type('mobile_phone', "011123456798")
                ->type('email', $user_random_name . '@' . 'sharklasers.com')
                ->type('address', $user_random_name)
                ->type('commercial_address', $user_random_name)
                ->type('post_code', '11000')
                ->type('city', 'Belgrade')
                //->select('country', '688')
                //->select('language', 'en_GB')
                ->pressAndWaitFor('save', 5)
            ;
        });
    }

    /**
     * @throws \Throwable
     */
    public function testCreateNewAdministratorLocation()
    {
        $user_random_name = StringHelper::player_random_name('testAdminLocation_');

        $this->browse(function (Browser $browser) use ($user_random_name){
            $browser->visit("newUser2")
                ->select('subject_type', config('constants.ADMINISTRATOR_LOCATION_ID'))
                ->pause(2000)
                ->select('parent_affiliate')
                ->pause(2000)
                ->type('username', $user_random_name)
                ->type('password', $user_random_name)
                ->type('confirm_password', $user_random_name)
                ->type('first_name', $user_random_name)
                ->type('last_name', $user_random_name)
                ->type('mobile_phone', "011123456798")
                ->type('email', $user_random_name . '@' . 'sharklasers.com')
                ->type('address', $user_random_name)
                ->type('commercial_address', $user_random_name)
                ->type('post_code', '11000')
                ->type('city', 'Belgrade')
                //->select('country', '688')
                //->select('language', 'en_GB')
                ->pressAndWaitFor('save', 5)
            ;
        });
    }

    /**
     * @throws \Throwable
     */
    public function testCreateNewSupportOperater()
    {
        $user_random_name = StringHelper::player_random_name('testSupportOperater_');

        $this->browse(function (Browser $browser) use ($user_random_name){
            $browser->visit("newUser2")
                ->select('subject_type', config('constants.SUPPORT_OPERATER_TYPE_ID'))
                ->pause(2000)
                ->select('parent_affiliate')
                ->pause(2000)
                ->type('username', $user_random_name)
                ->type('password', $user_random_name)
                ->type('confirm_password', $user_random_name)
                ->type('first_name', $user_random_name)
                ->type('last_name', $user_random_name)
                ->type('mobile_phone', "011123456798")
                ->type('email', $user_random_name . '@' . 'sharklasers.com')
                ->type('address', $user_random_name)
                ->type('commercial_address', $user_random_name)
                ->type('post_code', '11000')
                ->type('city', 'Belgrade')
                //->select('country', '688')
                //->select('language', 'en_GB')
                ->pressAndWaitFor('save', 5)
            ;
        });
    }

    /**
     * @throws \Throwable
     */
    public function testCreateNewCollectorOperater()
    {
        $user_random_name = StringHelper::player_random_name('testCollectorOperater_');

        $this->browse(function (Browser $browser) use ($user_random_name){
            $browser->visit("newUser2")
                ->select('subject_type', config('constants.COLLECTOR_OPERATER_TYPE_ID'))
                ->pause(2000)
                ->select('parent_affiliate')
                ->pause(2000)
                ->type('username', $user_random_name)
                ->type('password', $user_random_name)
                ->type('confirm_password', $user_random_name)
                ->type('first_name', $user_random_name)
                ->type('last_name', $user_random_name)
                ->type('mobile_phone', "011123456798")
                ->type('email', $user_random_name . '@' . 'sharklasers.com')
                ->type('address', $user_random_name)
                ->type('commercial_address', $user_random_name)
                ->type('post_code', '11000')
                ->type('city', 'Belgrade')
                ->select('country')
                //->select('language', 'en_GB')
                ->pressAndWaitFor('save', 5)
            ;
        });
    }

    /**
     * @throws \Throwable
     */
    public function testCreateNewCollectorLocation()
    {
        $user_random_name = StringHelper::player_random_name('testCollectorLocation_');
        $this->browse(function (Browser $browser) use ($user_random_name){
            $browser->visit("newUser2")
                ->select('subject_type', config('constants.COLLECTOR_LOCATION_TYPE_ID'))
                ->pause(2000)
                ->select('parent_affiliate')
                ->pause(2000)
                ->type('username', $user_random_name)
                ->type('password', $user_random_name)
                ->type('confirm_password', $user_random_name)
                ->type('first_name', $user_random_name)
                ->type('last_name', $user_random_name)
                ->type('mobile_phone', "011123456798")
                ->type('email', $user_random_name . '@' . 'sharklasers.com')
                ->type('address', $user_random_name)
                ->type('commercial_address', $user_random_name)
                ->type('post_code', '11000')
                ->type('city', 'Belgrade')
                ->select('country')
                //->select('language', 'en_GB')
                ->pressAndWaitFor('save', 5)
            ;
        });
    }

    /**
     * @throws \Throwable
     */
    public function testCreateNewCashier()
    {
        $user_random_name = StringHelper::player_random_name('testCashier_');

        $this->browse(function (Browser $browser) use ($user_random_name){
            $browser->visit("newUser2")
                ->select('subject_type', config('constants.CASHIER_TYPE_ID'))
                ->pause(2000)
                ->select('parent_affiliate')
                ->pause(2000)
                ->type('username', $user_random_name)
                ->type('password', $user_random_name)
                ->type('confirm_password', $user_random_name)
                ->type('first_name', $user_random_name)
                ->type('last_name', $user_random_name)
                ->type('mobile_phone', "011123456798")
                ->type('email', $user_random_name . '@' . 'sharklasers.com')
                ->type('address', $user_random_name)
                ->type('commercial_address', $user_random_name)
                ->type('post_code', '11000')
                ->type('city', 'Belgrade')
                //->select('country', '688')
                //->select('language', 'en_GB')
                ->pressAndWaitFor('save', 5)
            ;
        });
    }

    /**
     * @throws \Throwable
     */
    public function testCreateNewPlayer()
    {
        $player_random_name = StringHelper::player_random_name('testPlayer_');

        $this->browse(function (Browser $browser) use ($player_random_name){
            $browser->visit("newUser2")
                ->select('subject_type', config('constants.PLAYER_TYPE_ID'))
                ->pause(2000)
                ->select('parent_affiliate')
                ->pause(2000)
                ->type('username', $player_random_name)
                ->type('password', $player_random_name)
                ->type('confirm_password', $player_random_name)
                ->type('first_name', $player_random_name)
                ->type('last_name', $player_random_name)
                ->type('mobile_phone', "011123456798")
                ->type('email', $player_random_name . '@' . 'sharklasers.com')
                ->type('address', $player_random_name)
                ->type('commercial_address', $player_random_name)
                ->type('post_code', '11000')
                ->type('city', 'Belgrade')
                ->select('country', '688')
                ->select('language', 'en_GB')
                ->pressAndWaitFor('save', 5)
            ;
        });
    }

    /**
     * @throws \Throwable
     */
    public function testCreateNewTerminalScreenTV()
    {
        $user_random_name = StringHelper::player_random_name('testTerminalScreenTv_');

        $this->browse(function (Browser $browser) use ($user_random_name){
            $browser->visit("newUser2")
                ->select('subject_type', config('constants.TERMINAL_TV_TYPE_ID'))
                ->pause(2000)
                ->select('parent_affiliate')
                ->pause(2000)
                ->type('username', $user_random_name)
                ->type('password', $user_random_name)
                ->type('confirm_password', $user_random_name)
                ->type('first_name', $user_random_name)
                ->type('last_name', $user_random_name)
                ->type('mobile_phone', "011123456798")
                ->type('email', $user_random_name . '@' . 'sharklasers.com')
                ->type('address', $user_random_name)
                ->type('commercial_address', $user_random_name)
                ->type('post_code', '11000')
                ->type('city', 'Belgrade')
                ->select('country')
                //->select('language', 'en_GB')
                ->pressAndWaitFor('save', 5)
            ;
        });
    }

    /**
     * @throws \Throwable
     */
    public function testLogoutBackoffice()
    {
        $this->browse(function (Browser $browser) {
            //$browser->pause(1000);
            $browser->clickLink("Logout")
            ;
        });
    }
}
