<?php

namespace Tests\Browser;

use Tests\DuskTestCase;
use Laravel\Dusk\Browser;

class AdministratorSystemDesktopBackofficeMenuTest extends DuskTestCase
{
    private $home_page = '/backoffice-tombola/public/en/home_page';
    private $backoffice_username = "";
    private $backoffice_password = "";
    private $test_page_url = '/home_page';

    public function setUp()
    {
        $this->backoffice_username = getenv("ADMINISTRATOR_SYSTEM_BACKOFFICE_USERNAME");
        $this->backoffice_password = getenv("ADMINISTRATOR_SYSTEM_BACKOFFICE_PASSWORD");
        $this->home_page = getenv('TEST_HOME_PAGE_URL_FOR_BROWSER_TESTING');
        return parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @throws \Throwable
     */
    public function testLoginBackoffice()
    {
        $username = $this->backoffice_username;
        $password = $this->backoffice_password;

        $this->browse(function (Browser $browser) use($username, $password){
            $browser->visit('')
                ->type('username', $username)
                ->type('password', $password)
                ->press('login')
                ->assertPathIs($this->home_page)
                ->assertSee(__("authenticated.Home"))
            ;
            $browser->click("#toggleSideBar");
        });
    }

    /**
     * @throws \Throwable
     */
    public function testViewMyAccountOnMainMenu(){
        $this->browse(function (Browser $browser){
            $browser
                //->visit($this->test_page_url)
                ->assertSee(__("authenticated.My Account"))
                ->clickLink(__("authenticated.My Account"))
                ->pause(1000)
                ->assertSee(__("authenticated.My Personal Data"))
                ->assertSee(__("authenticated.Change Password"))
                ;
        });
    }

    /**
     * @throws \Throwable
     */
    public function testViewAdministrationOnMainMenu(){
        $this->browse(function (Browser $browser){
            $browser
                //->visit($this->test_page_url)
                ->assertSee(__("authenticated.Administration"))
                ->clickLink(__("authenticated.Administration"))
                ->pause(1000)
                ->assertSee(__("authenticated.Search All Entities & Users"))
                ->assertSee(__("authenticated.Translation"))
                ->clickLink(__("authenticated.Translation"))
                ->pause(1000)
                ->assertSee(__("authenticated.Login Form"))
                ->assertSee(__("authenticated.Other"))
                ->assertDontSee(__("authenticated.Version Setup"))
                ->assertSee(__("authenticated.Parameter Setup"))
                ->clickLink(__("authenticated.Parameter Setup"))
                ->pause(1000)
                ->assertSee(__("authenticated.Add New Parameter"))
                ->assertSee(__("authenticated.Entity List - Parameter Setup"))
                ->assertSee(__("authenticated.Draw Model Setup"))
                ->assertSee(__("authenticated.JackPot Setup"))
                ;
        });
    }

    /**
     * @throws \Throwable
     */
    public function testViewStructureEntityOnMainMenu(){
        $this->browse(function (Browser $browser){
            $browser
                //->visit($this->test_page_url)
                ->assertSee(__("authenticated.Structure Entity"))
                ->clickLink(__("authenticated.Structure Entity"))
                ->pause(1000)
                ->assertSee(__("authenticated.New Entity"))
                ->assertSee(__("authenticated.Search Entity"))
                ->assertSee(__("authenticated.Structure View"))
                ;
        });
    }

    /**
     * @throws \Throwable
     */
    public function testViewUsersOnMainMenu(){
        $this->browse(function (Browser $browser){
            $browser
                //->visit($this->test_page_url)
                //->clickLink(__("authenticated.Users"))
                ->clickLink(__("authenticated.New User"))
                ->pause(1000)
                ->assertSee(__("authenticated.New User"))
                ->assertSee(__("authenticated.Search Users"))
                ->assertSee(__("authenticated.Structure View"))
                ->assertSee(__("authenticated.List Administrators"))
                ->assertSee(__("authenticated.List Terminals"))
                ->assertSee(__("authenticated.List Players"))
            ;
        });
    }

    /**
     * @throws \Throwable
     */
    public function testViewCreditTransfersOnMainMenu(){
        $this->browse(function (Browser $browser){
            $browser
                //->visit($this->test_page_url)
                ->assertSee(__("authenticated.Credit Transfers"))
                ->clickLink(__("authenticated.Credit Transfers"))
                ->pause(1000)
                ->assertSee(__("authenticated.Deposit"))
                ->assertSee(__("authenticated.Withdraw"))
                ->assertSee(__("authenticated.Deposit - Structure View"))
                ->assertSee(__("authenticated.Withdraw - Structure View"))
            ;
        });
    }

    /**
     * @throws \Throwable
     */
    public function testViewTicketsOnMainMenu(){
        $this->browse(function (Browser $browser){
            $browser
                ->assertSee(__("authenticated.Tickets"))
                ->clickLink(__("authenticated.Tickets"))
                ->pause(1000)
                ->assertSee(__("authenticated.Search Tickets"))
                ->assertSee(__("authenticated.Search Temporary Tickets"))
            ;
        });
    }

    /**
     * @throws \Throwable
     */
    public function testViewReportsOnMainMenu(){
        $this->browse(function (Browser $browser){
            $browser
                ->assertSee(__("authenticated.Reports"))
                ->clickLink(__("authenticated.Reports"))
                ->pause(1000)
                ->assertSee(__("authenticated.Ticket List"))
                ->assertSee(__("authenticated.Draw List"))
                ->assertSee(__("authenticated.All Transactions"))
                ->assertSee(__("authenticated.Profit Transactions"))
                ->assertSee(__("authenticated.Collector Transactions"))
                ->assertSee(__("authenticated.Profit & Collected"))
                ->assertSee(__("authenticated.Player Liability"))
                ->assertSee(__("authenticated.Daily Report Cashier View"))
                ->assertSee(__("authenticated.List Login History"))
                ->assertDontSee(__("authenticated.All Machine Keys & Codes"))
                ->assertSee(__("authenticated.List Affiliate Monthly Summary Report"))
            ;
        });
    }

    /**
     * @throws \Throwable
     */
    public function testLogoutBackoffice()
    {
        $this->browse(function (Browser $browser) {
            //$browser->pause(1000);
            $browser->clickLink("Logout")
            ;
        });
    }
}
